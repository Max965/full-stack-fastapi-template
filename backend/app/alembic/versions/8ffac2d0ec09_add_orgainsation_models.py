"""add_orgainsation_models

Revision ID: 8ffac2d0ec09
Revises: 074370bd9e01
Create Date: 2024-12-23 18:48:40.916074

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8ffac2d0ec09'
down_revision = '074370bd9e01'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organisations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('domain', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('organisations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_organisations_domain'), ['domain'], unique=True)
        batch_op.create_index(batch_op.f('ix_organisations_name'), ['name'], unique=False)

    op.create_table('departments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('organisation_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organisation_id', sa.Uuid(), nullable=False),
    sa.Column('department_id', sa.Uuid(), nullable=True),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('reports_to_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], ),
    sa.ForeignKeyConstraint(['reports_to_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('task')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task',
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('TODO', 'IN_PROGRESS', 'DONE', 'BLOCKED', name='taskstatus'), autoincrement=False, nullable=False),
    sa.Column('priority', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='taskpriority'), autoincrement=False, nullable=False),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='task_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='task_pkey')
    )
    op.drop_table('employees')
    op.drop_table('departments')
    with op.batch_alter_table('organisations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organisations_name'))
        batch_op.drop_index(batch_op.f('ix_organisations_domain'))

    op.drop_table('organisations')
    # ### end Alembic commands ###
